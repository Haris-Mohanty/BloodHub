[{"C:\\wamp64\\www\\BloodHub\\client\\src\\index.js":"1","C:\\wamp64\\www\\BloodHub\\client\\src\\reportWebVitals.js":"2","C:\\wamp64\\www\\BloodHub\\client\\src\\App.js":"3","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\HomePage.js":"4","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\auth\\Login.js":"5","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\auth\\Register.js":"6","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Form\\InputType.js":"7","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Form\\Form.js":"8","C:\\wamp64\\www\\BloodHub\\client\\src\\services\\authService.js":"9","C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\store.js":"10","C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\features\\auth\\authSlice.js":"11","C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\features\\auth\\authAction.js":"12","C:\\wamp64\\www\\BloodHub\\client\\src\\services\\API.js":"13","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\Routes\\ProtectedRoutes.js":"14","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\Routes\\PublicRoutes.js":"15","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Spinner.js":"16","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Layout.js":"17","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Header.js":"18","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Menus\\Sidebar.js":"19","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Menus\\userMenus.js":"20","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\modal\\Modal.js":"21","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Donor.js":"22","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Hospitals.js":"23","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\OrganisationPage.js":"24","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Consumer.js":"25","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Donation.js":"26","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Analytics.js":"27","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\DonorList.js":"28","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\OrganisationList.js":"29","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\HospitalList.js":"30","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\AdminHome.js":"31"},{"size":754,"mtime":1687503072532,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1687344149381,"results":"34","hashOfConfig":"33"},{"size":3315,"mtime":1688360705547,"results":"35","hashOfConfig":"33"},{"size":2825,"mtime":1688363903611,"results":"36","hashOfConfig":"33"},{"size":945,"mtime":1687695507222,"results":"37","hashOfConfig":"33"},{"size":977,"mtime":1687695713067,"results":"38","hashOfConfig":"33"},{"size":495,"mtime":1687427674761,"results":"39","hashOfConfig":"33"},{"size":7779,"mtime":1687428153060,"results":"40","hashOfConfig":"33"},{"size":750,"mtime":1687758547269,"results":"41","hashOfConfig":"33"},{"size":218,"mtime":1687502897184,"results":"42","hashOfConfig":"33"},{"size":1797,"mtime":1687694794769,"results":"43","hashOfConfig":"33"},{"size":2130,"mtime":1687692894401,"results":"44","hashOfConfig":"33"},{"size":308,"mtime":1687504267684,"results":"45","hashOfConfig":"33"},{"size":820,"mtime":1687692095846,"results":"46","hashOfConfig":"33"},{"size":266,"mtime":1687696452488,"results":"47","hashOfConfig":"33"},{"size":223,"mtime":1687693792003,"results":"48","hashOfConfig":"33"},{"size":515,"mtime":1687962503770,"results":"49","hashOfConfig":"33"},{"size":2881,"mtime":1688363830843,"results":"50","hashOfConfig":"33"},{"size":3928,"mtime":1688359949693,"results":"51","hashOfConfig":"33"},{"size":424,"mtime":1688124772499,"results":"52","hashOfConfig":"33"},{"size":4949,"mtime":1688059986424,"results":"53","hashOfConfig":"33"},{"size":1585,"mtime":1688363966774,"results":"54","hashOfConfig":"33"},{"size":1632,"mtime":1688364197952,"results":"55","hashOfConfig":"33"},{"size":2109,"mtime":1688364375204,"results":"56","hashOfConfig":"33"},{"size":1918,"mtime":1688364375204,"results":"57","hashOfConfig":"33"},{"size":1911,"mtime":1688364375204,"results":"58","hashOfConfig":"33"},{"size":4084,"mtime":1688364294837,"results":"59","hashOfConfig":"33"},{"size":3465,"mtime":1688549772266,"results":"60","hashOfConfig":"33"},{"size":3411,"mtime":1688550557448,"results":"61","hashOfConfig":"33"},{"size":3483,"mtime":1688550694057,"results":"62","hashOfConfig":"33"},{"size":4398,"mtime":1688363643179,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1r6dl1i",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp64\\www\\BloodHub\\client\\src\\index.js",[],[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\reportWebVitals.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\App.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\HomePage.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\auth\\Login.js",["166"],[],"import React from \"react\";\r\nimport Form from \"../../components/shared/Form/Form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"../../components/shared/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = () => {\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  return (\r\n    <>\r\n    {error && <span>{toast.error(error)}</span>}\r\n      {loading ? (<Spinner />) : (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row g-0\">\r\n            <div className=\"col-md-8 form-banner\">\r\n              <img src=\"./assets/images/login.jpg\" />\r\n            </div>\r\n            <div className=\"col-md-4 form-container\">\r\n              <Form\r\n                formTitle={\"Login Page\"}\r\n                submitBtn={\"Login\"}\r\n                formType={\"login\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\auth\\Register.js",["167"],[],"import React from \"react\";\r\nimport Form from \"../../components/shared/Form/Form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"../../components/shared/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = () => {\r\n  const { loading, error } = useSelector((state) => state.auth);\r\n  return (\r\n    <>\r\n      {error && <span>{toast.error(error)}</span>}\r\n      {loading ? ( <Spinner /> ) : (\r\n        <div className=\"container-fuild\">\r\n          <div className=\"row g-0\">\r\n            <div className=\"col-md-8 form-banner\">\r\n              <img src=\"./assets/images/register.jpg\" />\r\n            </div>\r\n            <div className=\"col-md-4 shadow-sm form-container\">\r\n              <Form\r\n                formTitle={\"Register Page\"}\r\n                submitBtn={\"Register\"}\r\n                formType={\"register\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Form\\InputType.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Form\\Form.js",["168"],[],"import React, { useState } from \"react\";\r\nimport InputType from \"./InputType\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { handleLogin, handleRegister } from \"../../../services/authService\";\r\n\r\nconst Form = ({ formType, submitBtn, formTitle }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"donor\");\r\n  const [name, setName] = useState(\"\");\r\n  const [organisationName, setOrganisationName] = useState(\"\");\r\n  const [hospitalName, setHospitalName] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(e) => {\r\n          if (formType === \"login\")\r\n            return handleLogin(e, email, password, role);\r\n          else if (formType === \"register\")\r\n            return handleRegister(\r\n              e,\r\n              name,\r\n              role,\r\n              email,\r\n              password,\r\n              organisationName,\r\n              hospitalName,\r\n              website,\r\n              address,\r\n              phone\r\n            );\r\n        }}\r\n      >\r\n        <h1 className=\"text-center\">{formTitle}</h1>\r\n        <hr />\r\n        <div className=\"d-flex mb-3\">\r\n          <div className=\"form-check ms-2\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"donorRadio\"\r\n              value={\"donor\"}\r\n              onChange={(e) => setRole(e.target.value)}\r\n              defaultChecked\r\n            />\r\n            <label htmlFor=\"donorRadio\" className=\"form-check-label\">\r\n              Donor\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-3\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"adminRadio\"\r\n              value={\"admin\"}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            />\r\n            <label htmlFor=\"adminRadio\" className=\"form-check-label\">\r\n              Admin\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-3\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"hospitalRadio\"\r\n              value={\"hospital\"}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            />\r\n            <label htmlFor=\"hospitalRadio\" className=\"form-check-label\">\r\n              Hospital\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-3\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"orgRadio\"\r\n              value={\"organisation\"}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            />\r\n            <label htmlFor=\"orgRadio\" className=\"form-check-label\">\r\n              Organisation\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {/* SWITCH STATEMENT */}\r\n        {(() => {\r\n          switch (true) {\r\n            case formType === \"login\": {\r\n              return (\r\n                <>\r\n                  <InputType\r\n                    labelText={\"Email\"}\r\n                    labelFor={\"forEmail\"}\r\n                    inputType={\"email\"}\r\n                    name={\"email\"}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  <InputType\r\n                    labelText={\"Password\"}\r\n                    labelFor={\"forPassword\"}\r\n                    inputType={\"password\"}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n            case formType === \"register\": {\r\n              return (\r\n                <>\r\n                  {(role === \"admin\" || role === \"donor\") && (\r\n                    <InputType\r\n                      labelText={\"Name\"}\r\n                      labelFor={\"forName\"}\r\n                      inputType={\"text\"}\r\n                      name={\"name\"}\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  )}\r\n                  {role === \"organisation\" && (\r\n                    <InputType\r\n                      labelText={\"Organisation Name\"}\r\n                      labelFor={\"forOrganisationName\"}\r\n                      inputType={\"text\"}\r\n                      name={\"organisationName\"}\r\n                      value={organisationName}\r\n                      onChange={(e) => setOrganisationName(e.target.value)}\r\n                    />\r\n                  )}\r\n                  {role === \"hospital\" && (\r\n                    <InputType\r\n                      labelText={\"Hospital Name\"}\r\n                      labelFor={\"forHospitalName\"}\r\n                      inputType={\"text\"}\r\n                      name={\"hospitalName\"}\r\n                      value={hospitalName}\r\n                      onChange={(e) => setHospitalName(e.target.value)}\r\n                    />\r\n                  )}\r\n\r\n                  <InputType\r\n                    labelText={\"Email\"}\r\n                    labelFor={\"forEmail\"}\r\n                    inputType={\"email\"}\r\n                    name={\"email\"}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  <InputType\r\n                    labelText={\"Password\"}\r\n                    labelFor={\"forPassword\"}\r\n                    inputType={\"password\"}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  <InputType\r\n                    labelText={\"Website\"}\r\n                    labelFor={\"forWebsite\"}\r\n                    inputType={\"text\"}\r\n                    name={\"website\"}\r\n                    value={website}\r\n                    onChange={(e) => setWebsite(e.target.value)}\r\n                  />\r\n                  <InputType\r\n                    labelText={\"Address\"}\r\n                    labelFor={\"forAddress\"}\r\n                    inputType={\"text\"}\r\n                    name={\"address\"}\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                  />\r\n                  <InputType\r\n                    labelText={\"Phone\"}\r\n                    labelFor={\"forPhone\"}\r\n                    inputType={\"number\"}\r\n                    name={\"phone\"}\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n          }\r\n        })()}\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          {formType === \"login\" ? (\r\n            <p>\r\n              Not Register Yet! Register\r\n              <Link to={\"/register\"} className=\"text-decoration-none\">\r\n                {\" \"}\r\n                Here !\r\n              </Link>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Already User, Please\r\n              <Link to={\"/login\"} className=\"text-decoration-none\">\r\n                {\" \"}\r\n                Login !\r\n              </Link>\r\n            </p>\r\n          )}\r\n          <button className=\"btn btn-primary mb-3\" type=\"submit\">\r\n            {submitBtn}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\services\\authService.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\store.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\features\\auth\\authSlice.js",["169"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getCurrentUser, userLogin, userRegister } from \"./authAction\";\r\n\r\nconst token = localStorage.getItem(\"token\")\r\n  ? localStorage.getItem(\"token\")\r\n  : null;\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  user: null,\r\n  token: null,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    //Login User\r\n    builder.addCase(userLogin.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(userLogin.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n    });\r\n    builder.addCase(userLogin.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n\r\n    //Register User\r\n    builder.addCase(userRegister.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(userRegister.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      // state.user = payload.user;\r\n    });\r\n    builder.addCase(userRegister.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n    //Get Current User\r\n    builder.addCase(getCurrentUser.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(getCurrentUser.fulfilled, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.user = payload.user;\r\n    });\r\n    builder.addCase(getCurrentUser.rejected, (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default authSlice;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\redux\\features\\auth\\authAction.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\services\\API.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\Routes\\ProtectedRoutes.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\Routes\\PublicRoutes.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Spinner.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Layout.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Header.js",["170","171","172","173"],[],"import React from \"react\";\r\nimport {} from \"react-icons/bi\";\r\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Header = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const location = useLocation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //LOGOUT HANDLER\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    toast.success(\"Logout Successfully!\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-light shadow-sm container-fluid\">\r\n        <nav className=\"navbar navbar-expand-sm fixed-top shadow-lg navbar-light bg-white\">\r\n          <div className=\"container w-100\">\r\n            <a href=\"#\" className=\"navbar-brand\">\r\n              <img src=\"./assets/images/nav.png\" className=\"w-50\" />\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#myNavbar\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"navbar-collapse collapse\" id=\"myNavbar\">\r\n              <ul className=\"navbar-nav w-100 justify-content-end\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"#\" className=\"nav-link\">\r\n                    Welcome &nbsp;{\" \"}\r\n                    {user?.name || user?.hospitalName || user?.organisationName}{\" \"}\r\n                    ! &nbsp;\r\n                    <span className=\"badge bg-secondary\">{user?.role}</span>\r\n                  </a>\r\n                </li>\r\n                {location.pathname === \"/\" ||\r\n                location.pathname === \"/donor\" ||\r\n                location.pathname === \"/hospital\" ? (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/analytics\" className=\"nav-link\">\r\n                      Analytics\r\n                    </Link>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                      Home\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n\r\n                <li className=\"nav-item\">\r\n                  <a href=\"#\" className=\"nav-link\">\r\n                    About\r\n                  </a>\r\n                </li>\r\n\r\n                <div className=\"dropdown btn-group shadow-sm ml-auto\">\r\n                  <button className=\"btn btn-danger font-Audiowide\" onClick={handleLogout}>\r\n                    <i className=\"fa-solid fa-right-from-bracket\"></i>\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Menus\\Sidebar.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\Layout\\Menus\\userMenus.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\components\\shared\\modal\\Modal.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Donor.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Hospitals.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\OrganisationPage.js",["174"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./../../components/shared/Layout/Layout\";\r\nimport API from \"../../services/API\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst OrganisationPage = () => {\r\n  //Get Current User\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  //find org data\r\n  const getOrganisations = async () => {\r\n    try {\r\n      //check donor\r\n      if (user?.role === \"donor\") {\r\n        const { data } = await API(\"/inventory/get-organisation\");\r\n        if (data?.success) {\r\n          setData(data?.organisations);\r\n        }\r\n      }\r\n      //check hospital\r\n      if (user?.role === \"hospital\") {\r\n        const { data } = await API(\"/inventory/get-organisation-for-hospital\");\r\n        if (data?.success) {\r\n          setData(data?.organisations);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrganisations();\r\n  }, [user]);\r\n\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"mt-5 mb-4 fw-bold text-primary font-sofias\">Organisation Details</h2>\r\n      <hr />\r\n\r\n      <table className=\"table table-striped font-Lato\">\r\n        <thead>\r\n          <tr className=\"blue\">\r\n            <th scope=\"col\">S/N</th>\r\n            <th scope=\"col\">OrgName</th>\r\n            <th scope=\"col\">OrgEmail</th>\r\n            <th scope=\"col\">MobileNo. </th>\r\n            <th scope=\"col\">Address </th>\r\n            <th scope=\"col\">Date & Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"category-list\">\r\n          {data?.map((record, index) => (\r\n            <tr key={record._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{record.organisationName}</td>\r\n              <td>{record.email}</td>\r\n              <td>{record.phone}</td>\r\n              <td>{record.address}</td>\r\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrganisationPage;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Consumer.js",["175"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/shared/Layout/Layout\";\r\nimport API from \"../../services/API\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst Consumer = () => {\r\n  //get current user\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [data, setData] = useState([]);\r\n  //find donor records\r\n  const getDonors = async () => {\r\n    try {\r\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\r\n        filters: {\r\n          inventoryType: \"out\",\r\n          hospital: user?._id,\r\n        },\r\n      });\r\n      //   console.log(data);\r\n      if (data?.success) {\r\n        setData(data?.inventory);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDonors();\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"mt-5 mb-4 fw-bold text-success font-sofias\">Consumer Details</h1>\r\n      <hr />\r\n\r\n      <table className=\"table table-striped font-Lato\">\r\n        <thead>\r\n          <tr className=\"green\">\r\n            <th scope=\"col\">S/N</th>\r\n            <th scope=\"col\">BloodGroup</th>\r\n            <th scope=\"col\">InventoryType</th>\r\n            <th scope=\"col\">Quantity </th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Date & Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"category-list\">\r\n          {data?.map((record, index) => (\r\n            <tr key={record._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{record.bloodGroup}</td>\r\n              <td>{record.inventoryType}</td>\r\n              <td>{record.quantity}(ML)</td>\r\n              <td>{record.email}</td>\r\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Consumer;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Donation.js",["176"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/shared/Layout/Layout\";\r\nimport moment from \"moment\";\r\nimport API from \"../../services/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Donation = () => {\r\n  //get current user\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const [data, setData] = useState([]);\r\n  //find donor records\r\n  const getDonors = async () => {\r\n    try {\r\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\r\n        filters: {\r\n          inventoryType: \"in\",\r\n          donor: user?._id,\r\n        },\r\n      });\r\n      //   console.log(data);\r\n      if (data?.success) {\r\n        setData(data?.inventory);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDonors();\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"mt-5 mb-4 fw-bold text-success font-sofias\">Donor Details</h1>\r\n      <hr />\r\n\r\n      <table className=\"table table-striped font-Lato\">\r\n        <thead>\r\n          <tr className=\"green\">\r\n            <th scope=\"col\">S/N</th>\r\n            <th scope=\"col\">BloodGroup</th>\r\n            <th scope=\"col\">InventoryType</th>\r\n            <th scope=\"col\">Quantity </th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Date & Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"category-list\">\r\n          {data?.map((record, index) => (\r\n            <tr key={record._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{record.bloodGroup}</td>\r\n              <td>{record.inventoryType}</td>\r\n              <td>{record.quantity}(ML)</td>\r\n              <td>{record.email}</td>\r\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\dashboard\\Analytics.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\DonorList.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\OrganisationList.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\HospitalList.js",[],[],"C:\\wamp64\\www\\BloodHub\\client\\src\\pages\\Admin\\AdminHome.js",[],[],{"ruleId":"177","severity":1,"message":"178","line":16,"column":15,"nodeType":"179","endLine":16,"endColumn":54},{"ruleId":"177","severity":1,"message":"178","line":16,"column":15,"nodeType":"179","endLine":16,"endColumn":57},{"ruleId":"180","severity":1,"message":"181","line":96,"column":11,"nodeType":"182","messageId":"183","endLine":196,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":4,"column":7,"nodeType":"186","messageId":"187","endLine":4,"endColumn":12},{"ruleId":"188","severity":1,"message":"189","line":26,"column":13,"nodeType":"179","endLine":26,"endColumn":50},{"ruleId":"177","severity":1,"message":"178","line":27,"column":15,"nodeType":"179","endLine":27,"endColumn":69},{"ruleId":"188","severity":1,"message":"189","line":40,"column":19,"nodeType":"179","endLine":40,"endColumn":52},{"ruleId":"188","severity":1,"message":"189","line":64,"column":19,"nodeType":"179","endLine":64,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":37,"column":6,"nodeType":"192","endLine":37,"endColumn":12,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":32,"column":6,"nodeType":"192","endLine":32,"endColumn":8,"suggestions":"195"},{"ruleId":"190","severity":1,"message":"194","line":32,"column":6,"nodeType":"192","endLine":32,"endColumn":8,"suggestions":"196"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOrganisations'. Either include it or remove the dependency array.","ArrayExpression",["197"],"React Hook useEffect has a missing dependency: 'getDonors'. Either include it or remove the dependency array.",["198"],["199"],{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},"Update the dependencies array to be: [getOrganisations, user]",{"range":"205","text":"206"},"Update the dependencies array to be: [getDonors]",{"range":"207","text":"208"},{"range":"209","text":"208"},[1029,1035],"[getOrganisations, user]",[844,846],"[getDonors]",[840,842]]