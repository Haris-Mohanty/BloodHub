{"ast":null,"code":"import { createContext, version as ReactVersion } from 'react';\nvar ContextKey = Symbol.for(\"react-redux-context-\".concat(ReactVersion));\nvar gT = globalThis;\nfunction getContext() {\n  var realContext = gT[ContextKey];\n  if (!realContext) {\n    realContext = createContext(null);\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux';\n    }\n    gT[ContextKey] = realContext;\n  }\n  return realContext;\n}\nexport var ReactReduxContext = /*#__PURE__*/new Proxy({}, /*#__PURE__*/new Proxy({}, {\n  get: function get(_, handler) {\n    var target = getContext(); // @ts-ignore\n\n    return function (_target) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return Reflect[handler].apply(Reflect, [target].concat(args));\n    };\n  }\n}));\nexport default ReactReduxContext;","map":{"version":3,"names":["createContext","version","ReactVersion","ContextKey","Symbol","for","concat","gT","globalThis","getContext","realContext","process","env","NODE_ENV","displayName","ReactReduxContext","Proxy","get","_","handler","target","_target","_len","arguments","length","args","Array","_key","Reflect","apply"],"sources":["C:/wamp64/www/BloodHub/client/node_modules/react-redux/es/components/Context.js"],"sourcesContent":["import { createContext, version as ReactVersion } from 'react';\nconst ContextKey = Symbol.for(`react-redux-context-${ReactVersion}`);\nconst gT = globalThis;\n\nfunction getContext() {\n  let realContext = gT[ContextKey];\n\n  if (!realContext) {\n    realContext = createContext(null);\n\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux';\n    }\n\n    gT[ContextKey] = realContext;\n  }\n\n  return realContext;\n}\n\nexport const ReactReduxContext = /*#__PURE__*/new Proxy({}, /*#__PURE__*/new Proxy({}, {\n  get(_, handler) {\n    const target = getContext(); // @ts-ignore\n\n    return (_target, ...args) => Reflect[handler](target, ...args);\n  }\n\n}));\nexport default ReactReduxContext;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,IAAIC,YAAY,QAAQ,OAAO;AAC9D,IAAMC,UAAU,GAAGC,MAAM,CAACC,GAAG,wBAAAC,MAAA,CAAwBJ,YAAY,CAAE,CAAC;AACpE,IAAMK,EAAE,GAAGC,UAAU;AAErB,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAIC,WAAW,GAAGH,EAAE,CAACJ,UAAU,CAAC;EAEhC,IAAI,CAACO,WAAW,EAAE;IAChBA,WAAW,GAAGV,aAAa,CAAC,IAAI,CAAC;IAEjC,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCH,WAAW,CAACI,WAAW,GAAG,YAAY;IACxC;IAEAP,EAAE,CAACJ,UAAU,CAAC,GAAGO,WAAW;EAC9B;EAEA,OAAOA,WAAW;AACpB;AAEA,OAAO,IAAMK,iBAAiB,GAAG,aAAa,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;EACrFC,GAAG,WAAAA,IAACC,CAAC,EAAEC,OAAO,EAAE;IACd,IAAMC,MAAM,GAAGX,UAAU,CAAC,CAAC,CAAC,CAAC;;IAE7B,OAAO,UAACY,OAAO;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAA,OAAKC,OAAO,CAACT,OAAO,CAAC,CAAAU,KAAA,CAAhBD,OAAO,GAAUR,MAAM,EAAAd,MAAA,CAAKmB,IAAI,EAAC;IAAA;EAChE;AAEF,CAAC,CAAC,CAAC;AACH,eAAeV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}