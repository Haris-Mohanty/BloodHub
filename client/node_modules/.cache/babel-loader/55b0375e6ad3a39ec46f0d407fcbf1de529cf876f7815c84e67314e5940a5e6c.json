{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\BloodHub\\\\client\\\\src\\\\components\\\\shared\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputType from \"./inputType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    submitBtn,\n    formTitle\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputType, {\n        labelText: \"Email\",\n        labelFor: \"forEmail\",\n        inputType: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputType, {\n        labelText: \"Password\",\n        labelFor: \"forPassword\",\n        inputType: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: submitBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Form, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","InputType","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_ref","_s","submitBtn","formTitle","email","setEmail","password","setPassword","children","className","fileName","_jsxFileName","lineNumber","columnNumber","labelText","labelFor","inputType","name","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/wamp64/www/BloodHub/client/src/components/shared/Form/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport InputType from \"./inputType\";\r\n\r\nconst Form = ({ submitBtn, formTitle }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n    <>\r\n      <form>\r\n        <h1 className=\"text-center\">{formTitle}</h1>\r\n        <hr />\r\n        <InputType\r\n          labelText={\"Email\"}\r\n          labelFor={\"forEmail\"}\r\n          inputType={\"email\"}\r\n          name={\"email\"}\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <InputType\r\n          labelText={\"Password\"}\r\n          labelFor={\"forPassword\"}\r\n          inputType={\"password\"}\r\n          name={\"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"d-flex\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            {submitBtn}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,IAAI,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACpC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACEG,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAIa,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEL;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CjB,OAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNjB,OAAA,CAACF,SAAS;QACRoB,SAAS,EAAE,OAAQ;QACnBC,QAAQ,EAAE,UAAW;QACrBC,SAAS,EAAE,OAAQ;QACnBC,IAAI,EAAE,OAAQ;QACdC,KAAK,EAAEd,KAAM;QACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFjB,OAAA,CAACF,SAAS;QACRoB,SAAS,EAAE,UAAW;QACtBC,QAAQ,EAAE,aAAc;QACxBC,SAAS,EAAE,UAAW;QACtBC,IAAI,EAAE,UAAW;QACjBC,KAAK,EAAEZ,QAAS;QAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFjB,OAAA;QAAKa,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACrBZ,OAAA;UAAQa,SAAS,EAAC,iBAAiB;UAACa,IAAI,EAAC,QAAQ;UAAAd,QAAA,EAC9CN;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP,CAAC;AAACZ,EAAA,CAhCIF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}