{"ast":null,"code":"import _regeneratorRuntime from\"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Header from\"../../components/shared/Layout/Header\";import API from\"./../../services/API\";import moment from\"moment\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Analytics=function Analytics(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),inventoryData=_useState2[0],setInventoryData=_useState2[1];//RECENT\n//******* SHOW BLOOD RECORDS (IN & OUT & CALCULATE) *********/\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var colors=[\"#884A39\",\"#C38154\",\"#FFC26F\",\"#22A299\",\"#4F709C\",\"#4942E4\",\"#0079FF\",\"#FF0060\",\"#22A699\"];//Get Blood Group Data\nvar getBloodGroupData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$API$get,_data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return API.get(\"/analytics/bloodGroups-data\");case 3:_yield$API$get=_context.sent;_data=_yield$API$get.data;if(_data!==null&&_data!==void 0&&_data.success){setData(_data===null||_data===void 0?void 0:_data.bloodGroupData);// console.log(data);\n}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getBloodGroupData(){return _ref.apply(this,arguments);};}();//LifeCycle method\nuseEffect(function(){getBloodGroupData();},[]);//******* SHOW RECENT(LAST) 3 BLOOD RECORDS *********/\nvar getRecentBloodRecords=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$API$get2,_data2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return API.get(\"/inventory/get-recent-inventory\");case 3:_yield$API$get2=_context2.sent;_data2=_yield$API$get2.data;if(_data2!==null&&_data2!==void 0&&_data2.success){setInventoryData(_data2===null||_data2===void 0?void 0:_data2.inventory);console.log(_data2);}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}},_callee2,null,[[0,8]]);}));return function getRecentBloodRecords(){return _ref2.apply(this,arguments);};}();//LifeCycle method\nuseEffect(function(){getRecentBloodRecords();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 mt-5 d-flex flex-row flex-wrap\",children:data===null||data===void 0?void 0:data.map(function(record,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"card m-2 p-1\",style:{width:\"19rem\",backgroundColor:\"\".concat(colors[i])},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"card-title font-playfair bg-light text-dark text-center mb-3 fw-bold\",children:record.bloodGroup}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text text-light\",children:[\"Total In : \",/*#__PURE__*/_jsx(\"b\",{children:record.totalIn}),\" (ML)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text text-light\",children:[\"Total Out : \",/*#__PURE__*/_jsx(\"b\",{children:record.totalOut}),\" (ML)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer text-light bg-dark text-center\",children:[\"Total Available : \",/*#__PURE__*/_jsx(\"b\",{children:record.availableBlood}),\" (ML)\"]})]},i);})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8 mt-3\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fw-bold text-primary font-sofias mt-3\",children:\"Show Recent Blood Records\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"container mt-3\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped font-Lato\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"red\",children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"S/N\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"BloodGroup\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"InventoryType\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Quantity \"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Date & Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"category-list\",children:inventoryData===null||inventoryData===void 0?void 0:inventoryData.map(function(record,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:record.bloodGroup}),/*#__PURE__*/_jsx(\"td\",{children:record.inventoryType}),/*#__PURE__*/_jsxs(\"td\",{children:[record.quantity,\"(ML)\"]}),/*#__PURE__*/_jsx(\"td\",{children:record.email}),/*#__PURE__*/_jsx(\"td\",{children:moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")})]},record._id);})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\"})]})]});};export default Analytics;","map":{"version":3,"names":["React","useState","useEffect","Header","API","moment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Analytics","_useState","_useState2","_slicedToArray","inventoryData","setInventoryData","_useState3","_useState4","data","setData","colors","getBloodGroupData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$API$get","_data","wrap","_callee$","_context","prev","next","get","sent","success","bloodGroupData","t0","console","log","stop","apply","arguments","getRecentBloodRecords","_ref2","_callee2","_yield$API$get2","_data2","_callee2$","_context2","inventory","children","className","map","record","i","style","width","backgroundColor","concat","bloodGroup","totalIn","totalOut","availableBlood","scope","index","inventoryType","quantity","email","createdAt","format","_id"],"sources":["C:/wamp64/www/BloodHub/client/src/pages/dashboard/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../components/shared/Layout/Header\";\r\nimport API from \"./../../services/API\";\r\nimport moment from \"moment\";\r\n\r\nconst Analytics = () => {\r\n  const [inventoryData, setInventoryData] = useState([]); //RECENT\r\n\r\n  //******* SHOW BLOOD RECORDS (IN & OUT & CALCULATE) *********/\r\n  const [data, setData] = useState([]);\r\n  const colors = [\r\n    \"#884A39\",\r\n    \"#C38154\",\r\n    \"#FFC26F\",\r\n    \"#22A299\",\r\n    \"#4F709C\",\r\n    \"#4942E4\",\r\n    \"#0079FF\",\r\n    \"#FF0060\",\r\n    \"#22A699\",\r\n  ];\r\n  //Get Blood Group Data\r\n  const getBloodGroupData = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/analytics/bloodGroups-data\");\r\n      if (data?.success) {\r\n        setData(data?.bloodGroupData);\r\n        // console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //LifeCycle method\r\n  useEffect(() => {\r\n    getBloodGroupData();\r\n  }, []);\r\n\r\n  //******* SHOW RECENT(LAST) 3 BLOOD RECORDS *********/\r\n  const getRecentBloodRecords = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/inventory/get-recent-inventory\");\r\n      if (data?.success) {\r\n        setInventoryData(data?.inventory);\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //LifeCycle method\r\n  useEffect(() => {\r\n    getRecentBloodRecords();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-8 mt-5 d-flex flex-row flex-wrap\">\r\n          {data?.map((record, i) => (\r\n            <div\r\n              className=\"card m-2 p-1\"\r\n              key={i}\r\n              style={{ width: \"19rem\", backgroundColor: `${colors[i]}` }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h1 className=\"card-title font-playfair bg-light text-dark text-center mb-3 fw-bold\">\r\n                  {record.bloodGroup}\r\n                </h1>\r\n                <p className=\"card-text text-light\">\r\n                  Total In : <b>{record.totalIn}</b> (ML)\r\n                </p>\r\n                <p className=\"card-text text-light\">\r\n                  Total Out : <b>{record.totalOut}</b> (ML)\r\n                </p>\r\n              </div>\r\n              <div className=\"card-footer text-light bg-dark text-center\">\r\n                Total Available : <b>{record.availableBlood}</b> (ML)\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"col-md-2\"></div>\r\n      </div>\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-8 mt-3\">\r\n            <h2 className=\"fw-bold text-primary font-sofias mt-3\">Show Recent Blood Records</h2>\r\n            <hr/>\r\n          <div className=\"container mt-3\">\r\n            <table className=\"table table-striped font-Lato\">\r\n              <thead>\r\n                <tr className=\"red\">\r\n                  <th scope=\"col\">S/N</th>\r\n                  <th scope=\"col\">BloodGroup</th>\r\n                  <th scope=\"col\">InventoryType</th>\r\n                  <th scope=\"col\">Quantity </th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Date & Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"category-list\">\r\n                {inventoryData?.map((record, index) => (\r\n                  <tr key={record._id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{record.bloodGroup}</td>\r\n                    <td>{record.inventoryType}</td>\r\n                    <td>{record.quantity}(ML)</td>\r\n                    <td>{record.email}</td>\r\n                    <td>\r\n                      {moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}