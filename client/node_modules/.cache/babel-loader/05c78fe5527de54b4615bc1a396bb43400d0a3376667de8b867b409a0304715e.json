{"ast":null,"code":"/**\n * React Router v6.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]);\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, startTransitionImpl as UNSAFE_startTransitionImpl, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"names":["START_TRANSITION","startTransitionImpl","React","DataRouterContext","createContext","process","env","NODE_ENV","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useHref","to","_temp","relative","useInRouterContext","UNSAFE_invariant","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","locationPathname","routePathnamesJson","JSON","stringify","UNSAFE_getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","UNSAFE_warning","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","createElement","Provider","value","useParams","routeMatch","length","params","_temp2","useRoutes","routes","locationArg","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","element","undefined","Component","renderedMatches","_renderMatches","Object","assign","encodeLocation","_extends","key","Action","Pop","DefaultErrorComponent","error","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","Fragment","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","children","component","RenderedRoute","_ref","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","_dataRouterState2","_dataRouterState","errors","errorIndex","findIndex","m","keys","join","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","_state$errors","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","blockerKey","useState","String","blockerFunction","args","blocker","getBlocker","useEffect","deleteBlocker","blockers","get","UseNavigateStable","fromRouteId","alreadyWarned","cond","RouterProvider","fallbackElement","future","setStateImpl","v7_startTransition","setState","newState","subscribe","n","opts","preventScrollReset","Router","historyAction","initialized","DataRoutes","_ref2","MemoryRouter","_ref3","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","listen","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","stripBasename","Routes","_ref6","createRoutesFromChildren","Await","_ref7","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","renderError","reject","catch","_tracked","then","AbortedDeferredError","_ref8","toRender","Children","forEach","isValidElement","treePath","type","apply","name","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","renderMatches","mapRouteProperties","updates","createMemoryRouter","createRouter","v7_prependBasename","hydrationData","initialize"],"sources":["C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router\\lib\\polyfills\\start-transition.ts","C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router\\lib\\context.ts","C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router\\lib\\hooks.tsx","C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router\\lib\\components.tsx","C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router\\index.ts"],"sourcesContent":["import * as React from \"react\";\n\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nexport default React[START_TRANSITION];\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./polyfills/start-transition\";\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./lib/polyfills/start-transition\";\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n  startTransitionImpl as UNSAFE_startTransitionImpl,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}