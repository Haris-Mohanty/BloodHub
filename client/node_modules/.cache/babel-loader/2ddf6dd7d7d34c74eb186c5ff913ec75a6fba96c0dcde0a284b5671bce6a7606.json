{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../../services/API\";\nimport { toast } from \"react-toastify\";\n\n//****** LOGIN **********/\nexport const userLogin = createAsyncThunk(\"auth/login\", async (_ref, _ref2) => {\n  let {\n    role,\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await API.post(\"/auth/login\", {\n      role,\n      email,\n      password\n    });\n    //Store Token\n    if (data.success) {\n      localStorage.setItem(\"token\", data.token);\n      toast.success(data.message);\n      window.location.replace(\"/\");\n    }\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\n\n//****** REGISTER **********/\nexport const userRegister = createAsyncThunk(\"auth/register\", async (_ref3, _ref4) => {\n  let {\n    name,\n    role,\n    email,\n    password,\n    organisationName,\n    hospitalName,\n    website,\n    address,\n    phone\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  try {\n    const {\n      data\n    } = await API.post(\"/auth/register\", {\n      name,\n      role,\n      email,\n      password,\n      organisationName,\n      hospitalName,\n      website,\n      address,\n      phone\n    });\n    if (data.success) {\n      toast.success(data.message);\n      window.location.replace(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\n\n//****** CURRENT USER ******/\nexport const getCurrentUser = createAsyncThunk(\"auth/getCurrentUser\", async rejectWithValue => {\n  try {\n    const res = await API.get(\"/auth/current-user\");\n    if (res !== null && res !== void 0 && res.data) {\n      return res === null || res === void 0 ? void 0 : res.data;\n    }\n  } catch (error) {\n    console.log(error);\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","toast","userLogin","_ref","_ref2","role","email","password","rejectWithValue","data","post","success","localStorage","setItem","token","message","window","location","replace","error","response","userRegister","_ref3","_ref4","name","organisationName","hospitalName","website","address","phone","console","log","getCurrentUser","res","get"],"sources":["C:/wamp64/www/BloodHub/client/src/redux/features/auth/authAction.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../../services/API\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//****** LOGIN **********/\r\nexport const userLogin = createAsyncThunk(\r\n  \"auth/login\",\r\n  async ({ role, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.post(\"/auth/login\", { role, email, password });\r\n      //Store Token\r\n      if (data.success) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        toast.success(data.message);\r\n        window.location.replace(\"/\");\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n//****** REGISTER **********/\r\nexport const userRegister = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (\r\n    { name, role, email, password, organisationName, hospitalName, website, address, phone },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const { data } = await API.post(\"/auth/register\", { name, role, email, password, organisationName, hospitalName, website, address, phone });\r\n      if (data.success) {\r\n        toast.success(data.message);\r\n        window.location.replace(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n//****** CURRENT USER ******/\r\nexport const getCurrentUser = createAsyncThunk(\r\n  \"auth/getCurrentUser\",\r\n  async (rejectWithValue) => {\r\n    try {\r\n      const res = await API.get(\"/auth/current-user\");\r\n      if (res?.data) {\r\n        return res?.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}