{"ast":null,"code":"import _toConsumableArray from \"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/wamp64/www/BloodHub/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/**\n * React Router DOM v6.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_startTransitionImpl, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!searchParams.has(key)) {\n          defaultSearchParams.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, options, basename) {\n  var method;\n  var action = null;\n  var encType;\n  var formData;\n  if (isFormElement(target)) {\n    var submissionTrigger = options.submissionTrigger;\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      var attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = _attr ? stripBasename(_attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form);\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n      if (target instanceof URLSearchParams) {\n        var _iterator2 = _createForOfIteratorHelper(target),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              value = _step2$value[1];\n            formData.append(name, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (target != null) {\n        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {\n          var _name = _Object$keys[_i];\n          formData.append(_name, target[_name]);\n        }\n      }\n    }\n  }\n  return {\n    action: action,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData\n  };\n}\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n  for (var _i2 = 0, _entries = entries; _i2 < _entries.length; _i2++) {\n    var _entries$_i = _slicedToArray(_entries[_i2], 2),\n      key = _entries$_i[0],\n      val = _entries$_i[1];\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      var error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    future = _ref.future,\n    window = _ref.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setStateImpl = _React$useState2[1];\n  var _ref9 = future || {},\n    v7_startTransition = _ref9.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n    children = _ref2.children,\n    future = _ref2.future,\n    window = _ref2.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState3 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    state = _React$useState4[0],\n    setStateImpl = _React$useState4[1];\n  var _ref10 = future || {},\n    v7_startTransition = _ref10.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n    children = _ref3.children,\n    future = _ref3.future,\n    history = _ref3.history;\n  var _React$useState5 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    state = _React$useState6[0],\n    setStateImpl = _React$useState6[1];\n  var _ref11 = future || {},\n    v7_startTransition = _ref11.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n    relative = _ref4.relative,\n    reloadDocument = _ref4.reloadDocument,\n    replace = _ref4.replace,\n    state = _ref4.state,\n    target = _ref4.target,\n    to = _ref4.to,\n    preventScrollReset = _ref4.preventScrollReset,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext.basename;\n  // Rendered into <a href> for absolute URLs\n  var absoluteHref;\n  var isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        var currentUrl = new URL(window.location.href);\n        var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        var path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n    _ref5$caseSensitive = _ref5.caseSensitive,\n    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n    _ref5$className = _ref5.className,\n    classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n    _ref5$end = _ref5.end,\n    end = _ref5$end === void 0 ? false : _ref5$end,\n    styleProp = _ref5.style,\n    to = _ref5.to,\n    children = _ref5.children,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n    navigator = _React$useContext2.navigator;\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n    replace = _ref6.replace,\n    _ref6$method = _ref6.method,\n    method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n    action = _ref6.action,\n    onSubmit = _ref6.onSubmit,\n    fetcherKey = _ref6.fetcherKey,\n    routeId = _ref6.routeId,\n    relative = _ref6.relative,\n    preventScrollReset = _ref6.preventScrollReset,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      relative: relative,\n      preventScrollReset: preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n    storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  var _ref12 = _temp === void 0 ? {} : _temp,\n    target = _ref12.target,\n    replaceProp = _ref12.replace,\n    state = _ref12.state,\n    preventScrollReset = _ref12.preventScrollReset,\n    relative = _ref12.relative;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nfunction useSubmitImpl(fetcherKey, fetcherRouteId) {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmitImpl),\n    router = _useDataRouterContext.router;\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext3.basename;\n  var currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, options, basename),\n      action = _getFormSubmissionInf.action,\n      method = _getFormSubmissionInf.method,\n      encType = _getFormSubmissionInf.encType,\n      formData = _getFormSubmissionInf.formData;\n    // Base options shared between fetch() and navigate()\n    var opts = {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      formMethod: method,\n      formEncType: encType\n    };\n    if (fetcherKey) {\n      !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, fetcherRouteId, action, opts);\n    } else {\n      router.navigate(action, _extends({}, opts, {\n        replace: options.replace,\n        fromRouteId: currentRouteId\n      }));\n    }\n  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  var _ref13 = _temp2 === void 0 ? {} : _temp2,\n    relative = _ref13.relative;\n  var _React$useContext4 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext4.basename;\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var _routeContext$matches = routeContext.matches.slice(-1),\n    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n    match = _routeContext$matches2[0];\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  var location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseFetcher),\n    router = _useDataRouterContext2.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  var _React$useState7 = React.useState(function () {\n      return String(++fetcherId);\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    fetcherKey = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n      return createFetcherForm(fetcherKey, routeId);\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    Form = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return function (href) {\n        !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        router.fetch(fetcherKey, routeId, href);\n      };\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    load = _React$useState12[0];\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  var _ref14 = _temp3 === void 0 ? {} : _temp3,\n    getKey = _ref14.getKey,\n    storageKey = _ref14.storageKey;\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n    router = _useDataRouterContext3.router;\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n    preventScrollReset = _useDataRouterState.preventScrollReset;\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKey);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        var el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  var _ref15 = options || {},\n    capture = _ref15.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  var _ref16 = options || {},\n    capture = _ref16.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  var when = _ref8.when,\n    message = _ref8.message;\n  var blocker = unstable_useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","_iterator","_createForOfIteratorHelper","_step","_loop","has","getAll","forEach","append","s","n","done","err","e","f","getFormSubmissionInfo","options","basename","method","action","encType","formData","submissionTrigger","attr","getAttribute","stripBasename","FormData","name","type","form","Error","_iterator2","_step2","_step2$value","_slicedToArray","_i","_Object$keys","length","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","UNSAFE_mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","_i2","_entries","_entries$_i","val","__type","ErrorResponse","status","statusText","data","internal","error","message","stack","BrowserRouter","_ref","children","historyRef","React","useRef","current","v5Compat","_React$useState","useState","location","_React$useState2","setStateImpl","_ref9","v7_startTransition","setState","useCallback","newState","UNSAFE_startTransitionImpl","useLayoutEffect","listen","createElement","Router","navigationType","navigator","HashRouter","_ref2","_React$useState3","_React$useState4","_ref10","HistoryRouter","_ref3","_React$useState5","_React$useState6","_ref11","process","env","NODE_ENV","displayName","isBrowser","document","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref4","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","_objectWithoutPropertiesLoose","_excluded","_React$useContext","useContext","UNSAFE_NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","UNSAFE_warning","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref5","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","caseSensitive","_ref5$className","className","classNameProp","_ref5$end","end","styleProp","style","_excluded2","useResolvedPath","useLocation","routerState","UNSAFE_DataRouterStateContext","_React$useContext2","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","isPending","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","_ref6","forwardedRef","_ref6$method","onSubmit","fetcherKey","routeId","_excluded3","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","UNSAFE_DataRouterContext","UNSAFE_invariant","useDataRouterState","_temp","_ref12","replaceProp","navigate","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","_useDataRouterContext","UseSubmitImpl","router","_React$useContext3","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","formEncType","fetch","fromRouteId","_temp2","_ref13","_React$useContext4","routeContext","UNSAFE_RouteContext","_routeContext$matches","matches","slice","_routeContext$matches2","match","route","index","params","delete","toString","joinPaths","createFetcherForm","FetcherForm","fetcherId","useFetcher","_route$matches","_useDataRouterContext2","UseFetcher","id","_React$useState7","String","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","_toConsumableArray","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","_ref14","_useDataRouterContext3","UseScrollRestoration","_useDataRouterState","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","useBeforeUnload","callback","_ref15","capture","addEventListener","removeEventListener","_ref16","usePrompt","_ref8","when","blocker","unstable_useBlocker","reset","proceed","confirm","setTimeout"],"sources":["C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router-dom\\dom.ts","C:\\wamp64\\www\\BloodHub\\client\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_startTransitionImpl as startTransitionImpl,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}